{"ast":null,"code":"var _jsxFileName = \"/home/koko/NFTmarketplace-works/src/components/mint-token/mint-token.js\";\nimport React, { Component } from 'react';\nimport TokenSaleContract from '../../abis/TokenSaleContract.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MintToken extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-title col-auto mx-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-0 font-weight-normal\",\n          children: \"Get Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid pt-5 mint-token-adj\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 form-wrapper px-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"\",\n                children: \"Buy Ebizon Tokens (ETK)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"\",\n                children: \"Tokens Available - \" + this.state.tokens_available\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"\",\n                children: [\"Token Price - \" + this.state.token_price, /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"main\",\n                  className: \"eth-class\",\n                  src: \"../eth-logo.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"d-flex py-3\",\n                onSubmit: event => {\n                  event.preventDefault();\n                  this.buyToken();\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control rounded-0 mx-1\",\n                  placeholder: \"No. of Tokens\",\n                  onChange: event => this.setState({\n                    token_no: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  className: \"btn btn-block btn-primary w-25 rounded-0 mx-1\",\n                  value: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n  constructor(props) {\n    super(props);\n    this.buyToken = () => {\n      var buy_price = this.state.token_price * this.state.token_no;\n      const web3 = window.web3; // this is fee reciever change to your wallet\n      web3.eth.sendTransaction({\n        to: \"0x33c39CaCE33aD92579D1A1969201af58D4E3aBBF\",\n        from: this.state.account,\n        value: web3.utils.toWei(buy_price.toString(), \"ether\")\n      }).once('receipt', receipt => {\n        console.log(\"ether transfered\");\n        this.state.token_sale_contract.methods.buyTokens(web3.utils.toWei(this.state.token_no, \"ether\")).send({\n          from: this.state.account\n        }).once('receipt', receipt => {\n          console.log(\"tokens bought\");\n        });\n      });\n    };\n    this.state = {\n      account: '',\n      token_sale_contract: null,\n      tokens_available: '',\n      token_price: 0,\n      token_no: 0\n    };\n  }\n  async componentWillMount() {\n    await this.loadBlockchainData();\n  }\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = TokenSaleContract.networks[networkId];\n    if (networkData) {\n      const abi = TokenSaleContract.abi;\n      const address = networkData.address;\n      const token_sale_contract = new web3.eth.Contract(abi, address);\n      this.setState({\n        token_sale_contract\n      });\n      console.log(token_sale_contract);\n      var tokens_available = await this.state.token_sale_contract.methods.balanceTokens().call();\n      this.setState({\n        tokens_available: web3.utils.fromWei(tokens_available, \"ether\")\n      });\n      var token_price = await this.state.token_sale_contract.methods.tokenPrice().call();\n      this.setState({\n        token_price: web3.utils.fromWei(token_price, \"ether\")\n      });\n    } else {\n      window.alert('Smart contract not deployed to detected network.');\n    }\n  }\n}\nexport default MintToken;","map":{"version":3,"names":["React","Component","TokenSaleContract","MintToken","render","state","tokens_available","token_price","event","preventDefault","buyToken","setState","token_no","target","value","constructor","props","buy_price","web3","window","eth","sendTransaction","to","from","account","utils","toWei","toString","once","receipt","console","log","token_sale_contract","methods","buyTokens","send","componentWillMount","loadBlockchainData","accounts","getAccounts","networkId","net","getId","networkData","networks","abi","address","Contract","balanceTokens","call","fromWei","tokenPrice","alert"],"sources":["/home/koko/NFTmarketplace-works/src/components/mint-token/mint-token.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport TokenSaleContract from '../../abis/TokenSaleContract.json';\r\n\r\nclass MintToken extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"head-title col-auto mx-4\">\r\n                    <h4 className=\"mb-0 font-weight-normal\">Get Token</h4>\r\n                </div>\r\n                <div className=\"container-fluid pt-5 mint-token-adj\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 form-wrapper px-3\">\r\n                            <div class=\"form-container\">\r\n                                <h3 className=\"\">Buy Ebizon Tokens (ETK)</h3>\r\n                                <h6 className=\"\">{\"Tokens Available - \" + this.state.tokens_available}</h6>\r\n                                <h6 className=\"\">{\"Token Price - \" + this.state.token_price}\r\n                                <img alt=\"main\" className=\"eth-class\" src=\"../eth-logo.png\" />\r\n                                </h6>\r\n                                <form className=\"d-flex py-3\" onSubmit={(event) => {\r\n                                    event.preventDefault()\r\n                                    this.buyToken();\r\n                                }}>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control rounded-0 mx-1'\r\n                                        placeholder='No. of Tokens'\r\n                                        onChange={event => this.setState({ token_no: event.target.value })}\r\n                                    />\r\n                                    <input\r\n                                        type='submit'\r\n                                        className='btn btn-block btn-primary w-25 rounded-0 mx-1'\r\n                                        value='Buy'\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            account: '',\r\n            token_sale_contract: null,\r\n            tokens_available: '',\r\n            token_price: 0,\r\n            token_no: 0\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        await this.loadBlockchainData()\r\n    }\r\n\r\n    async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        // Load account\r\n        const accounts = await web3.eth.getAccounts()\r\n        this.setState({ account: accounts[0] })\r\n\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = TokenSaleContract.networks[networkId]\r\n        if (networkData) {\r\n            const abi = TokenSaleContract.abi\r\n            const address = networkData.address\r\n            const token_sale_contract = new web3.eth.Contract(abi, address)\r\n            this.setState({ token_sale_contract })\r\n            console.log(token_sale_contract)\r\n\r\n            var tokens_available = await this.state.token_sale_contract.methods.balanceTokens().call();\r\n            this.setState({ tokens_available: web3.utils.fromWei(tokens_available, \"ether\") })\r\n\r\n            var token_price = await this.state.token_sale_contract.methods.tokenPrice().call();\r\n            this.setState({ token_price: web3.utils.fromWei(token_price, \"ether\") })\r\n\r\n        } else {\r\n            window.alert('Smart contract not deployed to detected network.')\r\n        }\r\n    }\r\n\r\n\r\n    buyToken = () => {\r\n\r\n        var buy_price = this.state.token_price * this.state.token_no;\r\n\r\n        const web3 = window.web3 // this is fee reciever change to your wallet\r\n        web3.eth.sendTransaction({ to: \"0x33c39CaCE33aD92579D1A1969201af58D4E3aBBF\", from: this.state.account, value: web3.utils.toWei(buy_price.toString(), \"ether\") })\r\n            .once('receipt', (receipt) => {\r\n                console.log(\"ether transfered\")\r\n\r\n                this.state.token_sale_contract.methods.buyTokens(\r\n                    web3.utils.toWei(this.state.token_no, \"ether\")\r\n                ).send({ from: this.state.account })\r\n                    .once('receipt', (receipt) => {\r\n                        console.log(\"tokens bought\");\r\n                    });\r\n            })\r\n\r\n\r\n    }\r\n\r\n}\r\nexport default MintToken;"],"mappings":"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"},"metadata":{},"sourceType":"module"}