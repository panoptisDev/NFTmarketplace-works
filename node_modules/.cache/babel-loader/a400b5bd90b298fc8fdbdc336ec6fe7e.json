{"ast":null,"code":"var _jsxFileName = \"/home/koko/NFTmarketplace-works/src/components/my-collection/my-collection.js\";\nimport React, { Component } from 'react';\nimport ImageContract from '../../abis/ImageContract.json';\nimport TokenSaleContract from '../../abis/TokenSaleContract.json';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MyCollection extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-title col-auto mx-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-0 font-weight-normal\",\n          children: \"My Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid mb-5 my-collect-adj\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-around\",\n          children: this.state.images.map((id, key) => {\n            return this.state.owners[key] === this.state.account ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3 card bg-light p-0 m-3\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: `/nft-detail/${key}`\n                  // state: {name: \"vikas\"}\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-auto max-250\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"token\",\n                    className: \"token\",\n                    src: localStorage.getItem(this.state.imageData_name[key])\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 30,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"m-2\",\n                  children: \"Name - \" + this.state.imageData_name[key]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"m-2\",\n                  children: [\"Price - \" + this.state.imageData_price[key], /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"main\",\n                    className: \"eth-class\",\n                    src: \"../ebizcoin.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"m-2\",\n                  children: [\"Price - \" + this.state.imageData_price[key] * this.state.token_price, /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"main\",\n                    className: \"eth-class\",\n                    src: \"../eth-logo.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 45\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 41\n            }, this) : null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      contract: null,\n      totalSupply: 0,\n      images: [],\n      owners: [],\n      imageData_name: [],\n      imageData_price: [],\n      token_sale_contract: null,\n      token_price: 0\n    };\n  }\n  async componentWillMount() {\n    await this.loadBlockchainData();\n  }\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = ImageContract.networks[networkId];\n    if (networkData) {\n      const abi = ImageContract.abi;\n      const address = networkData.address;\n      const contract = new web3.eth.Contract(abi, address);\n      // console.log(contract)\n      this.setState({\n        contract\n      });\n      const totalSupply = await contract.methods.totalSupply().call();\n      // console.log(totalSupply)\n      this.setState({\n        totalSupply\n      });\n\n      // Load NFTs\n      for (var i = 1; i <= totalSupply; i++) {\n        const id = await contract.methods.images(i - 1).call();\n        // console.log(id)\n        this.setState({\n          images: [...this.state.images, id]\n        });\n      }\n      // Load Owner\n      for (i = 1; i <= totalSupply; i++) {\n        const owner = await contract.methods.ownerOf(i - 1).call();\n        // console.log(owner)\n        this.setState({\n          owners: [...this.state.owners, owner]\n        });\n      }\n      // Load NFTs Data \n      for (i = 1; i <= totalSupply; i++) {\n        const metadata = await contract.methods.imageData(i - 1).call();\n        // console.log(metadata)\n        this.setState({\n          imageData_name: [...this.state.imageData_name, metadata.name],\n          imageData_price: [...this.state.imageData_price, metadata.price]\n        });\n      }\n    } else {\n      window.alert('Smart contract not deployed to detected network.');\n    }\n    const sale_networkData = TokenSaleContract.networks[networkId];\n    if (sale_networkData) {\n      const abi = TokenSaleContract.abi;\n      const address = sale_networkData.address;\n      const token_sale_contract = new web3.eth.Contract(abi, address);\n      this.setState({\n        token_sale_contract\n      });\n      // console.log(token_sale_contract)\n\n      var token_price = await this.state.token_sale_contract.methods.tokenPrice().call();\n      this.setState({\n        token_price: web3.utils.fromWei(token_price, \"ether\")\n      });\n    } else {\n      window.alert('Smart contract not deployed to detected network.');\n    }\n  }\n}\nexport default MyCollection;","map":{"version":3,"names":["React","Component","ImageContract","TokenSaleContract","Link","MyCollection","render","state","images","map","id","key","owners","account","pathname","localStorage","getItem","imageData_name","imageData_price","token_price","constructor","props","contract","totalSupply","token_sale_contract","componentWillMount","loadBlockchainData","web3","window","accounts","eth","getAccounts","setState","networkId","net","getId","networkData","networks","abi","address","Contract","methods","call","i","owner","ownerOf","metadata","imageData","name","price","alert","sale_networkData","tokenPrice","utils","fromWei"],"sources":["/home/koko/NFTmarketplace-works/src/components/my-collection/my-collection.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ImageContract from '../../abis/ImageContract.json';\r\nimport TokenSaleContract from '../../abis/TokenSaleContract.json';\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nclass MyCollection extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"head-title col-auto mx-4\">\r\n                    <h4 className=\"mb-0 font-weight-normal\">My Collection</h4>\r\n                </div>\r\n                <div className=\"container-fluid mb-5 my-collect-adj\">\r\n                    <div className=\"row justify-content-around\">\r\n                        {this.state.images.map((id, key) => {\r\n                            return (\r\n                                (this.state.owners[key] === this.state.account) ?\r\n                                    (\r\n\r\n                                        <div key={key} className=\"col-3 card bg-light p-0 m-3\">\r\n                                            <Link to={{\r\n                                                pathname: `/nft-detail/${key}`,\r\n                                                // state: {name: \"vikas\"}\r\n                                            }}>\r\n                                                <div className=\"col-auto max-250\">\r\n                                                    <img alt=\"token\" className=\"token\" src={localStorage.getItem(this.state.imageData_name[key])} />\r\n                                                </div>\r\n                                                <div className=\"m-2\">{\"Name - \" + this.state.imageData_name[key]}</div>\r\n                                                <div className=\"m-2\">{\"Price - \" + this.state.imageData_price[key]}\r\n                                                <img alt=\"main\" className=\"eth-class\" src=\"../ebizcoin.png\" />\r\n                                                </div>\r\n                                                <div className=\"m-2\">{\"Price - \" + (this.state.imageData_price[key] * this.state.token_price)}\r\n                                                <img alt=\"main\" className=\"eth-class\" src=\"../eth-logo.png\" />\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                    )\r\n                                    : null\r\n                            )\r\n                        })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            account: '',\r\n            contract: null,\r\n            totalSupply: 0,\r\n            images: [],\r\n            owners: [],\r\n            imageData_name: [],\r\n            imageData_price: [],\r\n            token_sale_contract: null,\r\n            token_price: 0\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        await this.loadBlockchainData()\r\n    }\r\n\r\n    async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        // Load account\r\n        const accounts = await web3.eth.getAccounts()\r\n        this.setState({ account: accounts[0] })\r\n\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = ImageContract.networks[networkId]\r\n        if (networkData) {\r\n            const abi = ImageContract.abi\r\n            const address = networkData.address\r\n            const contract = new web3.eth.Contract(abi, address)\r\n            // console.log(contract)\r\n            this.setState({ contract })\r\n            const totalSupply = await contract.methods.totalSupply().call()\r\n            // console.log(totalSupply)\r\n            this.setState({ totalSupply })\r\n\r\n\r\n            // Load NFTs\r\n            for (var i = 1; i <= totalSupply; i++) {\r\n                const id = await contract.methods.images(i - 1).call()\r\n                // console.log(id)\r\n                this.setState({\r\n                    images: [...this.state.images, id]\r\n                })\r\n            }\r\n            // Load Owner\r\n            for (i = 1; i <= totalSupply; i++) {\r\n                const owner = await contract.methods.ownerOf(i - 1).call()\r\n                // console.log(owner)\r\n                this.setState({\r\n                    owners: [...this.state.owners, owner]\r\n                })\r\n            }\r\n            // Load NFTs Data \r\n            for (i = 1; i <= totalSupply; i++) {\r\n                const metadata = await contract.methods.imageData(i - 1).call()\r\n                // console.log(metadata)\r\n                this.setState({\r\n                    imageData_name: [...this.state.imageData_name, metadata.name],\r\n                    imageData_price: [...this.state.imageData_price, metadata.price]\r\n                })\r\n            }\r\n\r\n        } else {\r\n            window.alert('Smart contract not deployed to detected network.')\r\n        }\r\n\r\n        const sale_networkData = TokenSaleContract.networks[networkId]\r\n        if (sale_networkData) {\r\n            const abi = TokenSaleContract.abi\r\n            const address = sale_networkData.address\r\n            const token_sale_contract = new web3.eth.Contract(abi, address)\r\n            this.setState({ token_sale_contract })\r\n            // console.log(token_sale_contract)\r\n\r\n            var token_price = await this.state.token_sale_contract.methods.tokenPrice().call();\r\n            this.setState({ token_price: web3.utils.fromWei(token_price, \"ether\") })\r\n\r\n        } else {\r\n            window.alert('Smart contract not deployed to detected network.')\r\n        }\r\n    }\r\n\r\n}\r\nexport default MyCollection;"],"mappings":"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"},"metadata":{},"sourceType":"module"}